# Generated by Django 2.2 on 2019-04-08 22:45

from django.db import migrations
from django.db.models import Q


def populate_styles(apps, schema_editor):
    beer_model = apps.get_model("beers.Beer")
    style_model = apps.get_model("beers.Style")
    beers = beer_model.objects.filter(
        Q(style__isnull=False) | ~Q(api_vendor_style="")
    ).select_related("style")
    style_names = {}
    style_map = {}
    for beer in beers:
        if beer.api_vendor_style:
            name = beer.api_vendor_style
        else:
            name = beer.style.name
        ci_name = name.casefold()

        try:
            style = style_names[ci_name]
        except KeyError:
            style = style_model(name=name)
            style_map[beer] = style
            style_names[ci_name] = style
        else:
            style_map[beer] = style
    style_model.objects.bulk_create(style_names.values())
    for beer, style in style_map.items():
        beer.new_style = style
        beer.save()


def reverse(apps, schema_editor):
    beer_model = apps.get_model("beers.Beer")
    for beer in beer_model.objects.select_related("new_style").filter(
        new_style__isnull=False,
    ):
        beer.api_vendor_style = beer.new_style.name
        beer.save()


class Migration(migrations.Migration):

    dependencies = [
        ("beers", "0023_auto_20190408_2248"),
    ]

    operations = [
        migrations.RunPython(populate_styles, reverse),
    ]
